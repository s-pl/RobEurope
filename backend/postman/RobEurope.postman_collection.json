{
  "info": {
    "name": "RobEurope API",
    "_postman_id": "robeurope-collection-001",
    "description": "Complete Postman collection for RobEurope: Auth, Health, Countries, and Users endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "base_url", "value": "http://localhost:85", "type": "string" },
    { "key": "jwt_token", "value": "", "type": "string" }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check (requires auth)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ],
            "url": { "raw": "{{base_url}}/api/health", "host": ["{{base_url}}"], "path": ["api","health"] }
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register - Example",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Ana\",\n  \"last_name\": \"Garc√≠a\",\n  \"email\": \"ana.garcia@example.com\",\n  \"password\": \"P@ssw0rd1\",\n  \"phone\": \"+34123456789\",\n  \"country_id\": 34\n}"
            },
            "url": { "raw": "{{base_url}}/api/auth/register", "host": ["{{base_url}}"], "path": ["api","auth","register"] }
          }
        },
        {
          "name": "Login - Example",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"ana.garcia@example.com\",\n  \"password\": \"P@ssw0rd1\"\n}"
            },
            "url": { "raw": "{{base_url}}/api/auth/login", "host": ["{{base_url}}"], "path": ["api","auth","login"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Login returns token', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200,201]);",
                  "  var json = {};",
                  "  try { json = pm.response.json(); } catch(e) {}",
                  "  pm.expect(json).to.have.property('token');",
                  "  if (json.token) { pm.collectionVariables.set('jwt_token', json.token); }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Countries",
      "item": [
        {
          "name": "Get All Countries",
          "request": {
            "method": "GET",
            "url": { "raw": "{{base_url}}/api/countries", "host": ["{{base_url}}"], "path": ["api","countries"] }
          }
        },
        {
          "name": "Get Country by ID",
          "request": {
            "method": "GET",
            "url": { "raw": "{{base_url}}/api/countries/{{country_id}}", "host": ["{{base_url}}"], "path": ["api","countries","{{country_id}}"] }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": { "exec": [ "if (!pm.variables.get('country_id')) { pm.variables.set('country_id', '1'); }" ], "type": "text/javascript" }
            }
          ]
        },
        {
          "name": "Create Country",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"code\": \"XX\",\n  \"name\": \"New Country\",\n  \"flag_emoji\": \"üè≥Ô∏è\"\n}" },
            "url": { "raw": "{{base_url}}/api/countries", "host": ["{{base_url}}"], "path": ["api","countries"] }
          }
        },
        {
          "name": "Update Country",
          "request": {
            "method": "PUT",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"Updated Country Name\"\n}" },
            "url": { "raw": "{{base_url}}/api/countries/{{country_id}}", "host": ["{{base_url}}"], "path": ["api","countries","{{country_id}}"] }
          }
        },
        {
          "name": "Delete Country",
          "request": {
            "method": "DELETE",
            "url": { "raw": "{{base_url}}/api/countries/{{country_id}}", "host": ["{{base_url}}"], "path": ["api","countries","{{country_id}}"] }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": { "method": "GET", "url": { "raw": "{{base_url}}/api/users", "host": ["{{base_url}}"], "path": ["api","users"] } }
        },
        {
          "name": "Search Users",
          "request": { "method": "GET", "url": { "raw": "{{base_url}}/api/users?q=john", "host": ["{{base_url}}"], "path": ["api","users"], "query": [ { "key": "q", "value": "john" } ] } }
        },
        {
          "name": "Get User by ID",
          "request": { "method": "GET", "url": { "raw": "{{base_url}}/api/users/{{user_id}}", "host": ["{{base_url}}"], "path": ["api","users","{{user_id}}"] } },
          "event": [ { "listen": "prerequest", "script": { "exec": [ "if (!pm.variables.get('user_id')) { pm.variables.set('user_id', '1'); }" ], "type": "text/javascript" } } ]
        },
        {
          "name": "Get My Profile",
          "request": { "method": "GET", "header": [ { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ], "url": { "raw": "{{base_url}}/api/users/me", "host": ["{{base_url}}"], "path": ["api","users","me"] } }
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PATCH",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"phone\": \"+34123456789\",\n  \"profile_photo_url\": \"https://example.com/photo.jpg\",\n  \"country_id\": 1\n}"
            },
            "url": { "raw": "{{base_url}}/api/users/me", "host": ["{{base_url}}"], "path": ["api","users","me"] }
          }
        },
        {
          "name": "Delete My Account",
          "request": { "method": "DELETE", "header": [ { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ], "url": { "raw": "{{base_url}}/api/users/me", "host": ["{{base_url}}"], "path": ["api","users","me"] } }
        },
        {
          "name": "Delete User by ID",
          "request": { "method": "DELETE", "header": [ { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ], "url": { "raw": "{{base_url}}/api/users/{{user_id}}", "host": ["{{base_url}}"], "path": ["api","users","{{user_id}}"] } }
        }
      ]
    },
    {
      "name": "Streams",
      "item": [
        {
          "name": "Get All Streams",
          "request": {
            "method": "GET",
            "url": { "raw": "{{base_url}}/api/streams", "host": ["{{base_url}}"], "path": ["api","streams"] }
          }
        },
        {
          "name": "Get Stream by ID",
          "request": {
            "method": "GET",
            "url": { "raw": "{{base_url}}/api/streams/{{stream_id}}", "host": ["{{base_url}}"], "path": ["api","streams","{{stream_id}}"] }
          },
          "event": [
            { "listen": "prerequest", "script": { "type": "text/javascript", "exec": [ "if (!pm.variables.get('stream_id')) { pm.variables.set('stream_id', '1'); }" ] } }
          ]
        },
        {
          "name": "Create Stream",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Matchday Live\",\n  \"description\": \"Round highlights\",\n  \"platform\": \"twitch\",\n  \"stream_url\": \"https://twitch.tv/example\",\n  \"is_live\": false,\n  \"host_team_id\": null,\n  \"competition_id\": null\n}"
            },
            "url": { "raw": "{{base_url}}/api/streams", "host": ["{{base_url}}"], "path": ["api","streams"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Create returns stream id', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200,201]);",
                  "  var json = {};",
                  "  try { json = pm.response.json(); } catch(e) {}",
                  "  pm.expect(json).to.have.property('id');",
                  "  if (json.id) { pm.variables.set('stream_id', String(json.id)); }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Stream",
          "request": {
            "method": "PUT",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Matchday Live (updated)\",\n  \"description\": \"Now with interviews\",\n  \"platform\": \"youtube\",\n  \"stream_url\": \"https://youtube.com/watch?v=abc123\",\n  \"is_live\": true,\n  \"host_team_id\": null,\n  \"competition_id\": null\n}"
            },
            "url": { "raw": "{{base_url}}/api/streams/{{stream_id}}", "host": ["{{base_url}}"], "path": ["api","streams","{{stream_id}}"] }
          },
          "event": [
            { "listen": "prerequest", "script": { "type": "text/javascript", "exec": [ "if (!pm.variables.get('stream_id')) { pm.variables.set('stream_id', '1'); }" ] } }
          ]
        },
        {
          "name": "Delete Stream",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{jwt_token}}" } ],
            "url": { "raw": "{{base_url}}/api/streams/{{stream_id}}", "host": ["{{base_url}}"], "path": ["api","streams","{{stream_id}}"] }
          },
          "event": [
            { "listen": "prerequest", "script": { "type": "text/javascript", "exec": [ "if (!pm.variables.get('stream_id')) { pm.variables.set('stream_id', '1'); }" ] } }
          ]
        }
      ]
    }
  ]
}
